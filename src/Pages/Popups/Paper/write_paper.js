import React, { useState, useEffect } from "react";
import "../../../Css/WritePaper.css";
import "../../../Css/Common.css";
import axios from "axios";
import BearP from "../../../Image/Paper/Í≥∞p.png";
import RaccoonP from "../../../Image/Paper/ÎÑàÍµ¨Î¶¨p.png";
import SnowmanP from "../../../Image/Paper/ÎààÏÇ¨Îûåp.png";
import DeerP from "../../../Image/Paper/ÏÇ¨Ïä¥p.png";
import RabbitP from "../../../Image/Paper/ÌÜ†ÎÅºp.png";
import PenguinP from "../../../Image/Paper/Ìé≠Í∑Ñp.png";
import QuitPopup from "../../../Pages/Popups/quit_popup.js";
import EditPopup from "../../../Pages/Popups/edit_popup.js";

const WritePaper = ({ design, onConfirm }) => {
  const [showQuit, setShowQuit] = useState(false);
  const [showConfirm, setShowConfirm] = useState(false);
  const [text, setText] = useState("");
  const paperDesign = design;
  const handleTextChange = (event) => {
    setText(event.target.value);
  };

  const handleSavePaper = () => {
    // Ïó¨Í∏∞ÏÑú ÏÑúÎ≤ÑÎ°ú Îç∞Ïù¥ÌÑ∞Î•º Î≥¥ÎÇ¥Í≥† Ï†ÄÏû•ÌïòÎäî Î°úÏßÅÏùÑ Ï∂îÍ∞ÄÌï¥Ïïº Ìï©ÎãàÎã§.
    // ÏòàÎ•º Îì§Ïñ¥ axiosÎ•º ÏÇ¨Ïö©ÌïòÏó¨ POST ÏöîÏ≤≠ÏùÑ Î≥¥ÎÇº Ïàò ÏûàÏäµÎãàÎã§.
    axios
      .post("/api/save_paper", { userId: 3, text, design: paperDesign })
      .then((response) => {
        console.log("Paper saved successfully");
      })
      .catch((error) => {
        console.error("Error saving paper:", error);
      });

    // Ï†ÄÏû•Ïù¥ ÏôÑÎ£åÎêòÎ©¥ ÌåùÏóÖÏùÑ Îã´ÏäµÎãàÎã§.
  };
  //ÎîîÏûêÏù∏ Îß§Ïπ≠

  let designURL;
  switch (design) {
    case 1:
      designURL = PenguinP;
      break;
    case 2:
      designURL = BearP;
      break;
    case 3:
      designURL = RabbitP;
      break;
    case 4:
      designURL = DeerP;
      break;
    case 5:
      designURL = SnowmanP;
      break;
    case 6:
      designURL = RaccoonP;
      break;
  }

  const handleDeleteClick = () => {
    // Show quit popup when delete is clicked
    setShowQuit(true);
  };
  return (
    <div className="popup-overlay">
      <div style={{ width: "100%", maxWidth: "420px" }}>
        <div className="show_paper">
          <div className="popup_back" onClick={onConfirm}>
            <img
              src={require("../../../Image/Ranking/back.png")}
              alt="receipt"
              style={{ width: "5%" }}
            />
            &emsp;Ïù¥Í∏ÄÎ£®Î°ú ÎèåÏïÑÍ∞ÄÍ∏∞
          </div>
          <form method="post">
            <div className="container">
              <div
                className="showPaper"
                style={{ backgroundImage: `url(${designURL})` }}
                alt="design"
              >
                <textarea
                  className="paper_content_write"
                  value={text}
                  onChange={handleTextChange}
                  rows="15"
                  cols="50"
                />
              </div>
            </div>

            <div className="button_container">
              <input
                value="ÏÇ≠Ï†ú"
                type="reset"
                className="button_paperwrite"
                onClick={handleDeleteClick}
              />
              <input
                value="ÌôïÏù∏"
                type="submit"
                className="button_paperwrite"
                onClick={handleSavePaper}
              />
            </div>
          </form>
          {showQuit && (
            <QuitPopup
              message="Ïù¥ ÌéòÏù¥ÏßÄÎ•º Î≤óÏñ¥ÎÇòÎ©¥ ÎßàÏßÄÎßâ Ï†ÄÏû• ÌõÑ
ÏàòÏ†ïÎêú ÎÇ¥Ïö©ÏùÄ Ï†ÄÏû•ÎêòÏßÄ ÏïäÏïÑÏöî!"
              onQuit={() => {
                setShowQuit(false);
                setShowConfirm(true); // Ïù¥ Î∂ÄÎ∂ÑÏóêÏÑú EditPopupÏùÑ ÎÇòÏò§Í≤å ÏÑ§Ï†ï
              }}
              onConfirm_q={() => {
                setShowQuit(false);
              }}
            />
          )}

          {showConfirm && (
            <EditPopup
              message="Î°§ÎßÅÌéòÏù¥Ìçº ÏÇ≠Ï†úÍ∞Ä ÏôÑÎ£åÎêòÏóàÏñ¥Ïöî. üò•"
              onConfirm={() => {
                setShowConfirm(false);
              }}
              onCancel={() => {
                setShowConfirm(false);
              }}
            />
          )}
        </div>
      </div>
    </div>
  );
};

export default WritePaper;
